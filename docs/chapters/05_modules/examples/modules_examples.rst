Примеры работы с модулями
#########################

Встроенные модули
******************

random
=======

`Документация <https://docs.python.org/3/library/random.html>`__

1. Напиcать программу на Python для выбора случайного элемента из списка, множества, значения по словарю и файла из каталога. Использовать random.choice()

2. Напиcать программу на Python для создания списка случайных целых чисел и случайного выбора нескольких элементов из указанного списка. Использовать random.sample()

3. Напиcать программу на Python для перетасовки элементов заданного списка. Использовать random.shuffle()


csv
====

`Документация <https://docs.python.org/3/library/csv.html>`__

1. Напиcать программу на Python для чтения и отображения содержимого данного CSV-файла ('bike_sales.csv'). Использовать csv.reader

2. Напиcать программу на Python, чтобы пропускать заголовки данного CSV-файла. Использовать csv.reader, next(obj)

3. Напиcать программу на Python, выводящую из CSV-файла списов городов (без дубликатов). Использовать csv.reader, next(obj)


Модули пользователя
*******************

Создать файл **mybike.py**, содержащий следующие функции:

- **load_dataset(file_name='bike_sales.csv')** - загрузка фанных из csv файла в датасет
- **define_sales_cities(city=None, lst=[])** - возвращает список городов, в которых продавались велосипеды
- **calculate_sum_city(city=None, lst=[])** - возвращает сумму продаж велосипедов в указанном городе

Работа с файловой структурой
*******************************

Файлы фотографий с новогоднего корпоратива, предоставленные разными фотографами переименовать в формате 
**NY_XXX.jpg**, где XXX - порядковый номер файла (001, 002,...,010,...,999) в хронологическом порядке (по времени создания).


