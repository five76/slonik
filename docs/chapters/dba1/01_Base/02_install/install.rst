Установка PostgreSQL
#####################

Для установки Postgres имеется два варианта:

- установка из исходных кодов;
- установка из пакетов

Установка из исходных кодов выполняется чаще всего профессиональными разработчиками, в частности, разработчиками Postgres.
Является достаточно трудоемким процессом, подразумевающим полное понимание происходящих процессов, особенностей операционной системы,
тонкостей устанавливаемого программного обеспечения.

Администраторы в своей работе редко используют подобную практику, а пользуются уже готовыми решениями,
которые предоставляются в виде готовых установочных пакетов, которые скачиваются из репозиториев.
Этот вариант является предпочтительным, поскольку он собран из тех же исходных кодов с учетом операционной системы.

1) Обновить список репозиториев

::

    $ sudo apt-get update
	
2) Установить программное обеспечение:

::

	$ sudo apt-get install postgresql16-server
	$ sudo apt-get install postgresql16-contrib
	
Создание кластера
*****************

Прежде чем осуществлять работу с базами данных, необходимо проинициализировать область хранения баз данных на диске. 
Данное называется хранилище кластером баз данных. 

**Кластер** (от англ. cluster — скопление, кисть, рой) — объединение нескольких однородных элементов, 
которое может рассматриваться как самостоятельная единица, обладающая определёнными свойствами. 

**Кластер в компьютерных сетях** — это группа компьютеров, серверов или процессоров, 
объединённых высокоскоростными каналами связи и представляющих с точки зрения пользователя *единый аппаратный ресурс*.

**Кластер баз данных PostgreSQL** представляет собой набор баз, управляемых одним экземпляром работающего сервера.

.. figure:: img/02_cluster.png
       :scale: 100 %
       :align: center
       :alt: asda

При инициализации в каждом кластере создаются две базы: template1 и template0. 

С точки зрения файловой системы кластер баз данных представляет собой один каталог (каталог данных или область данных), 
в котором будут храниться все данные. 

Владелец кластера может определить переменную окружения **PGDATA**, указывающую на каталог кластера. 
Эту переменную используют некоторые утилиты сервера, когда им нужно узнать расположение кластера. 
К таким утилитам относится **initdb**, а также основная утилита управления сервером **pg_ctl**.

Какого-либо стандартного пути не существует, но часто данные размещаются в /usr/local/pgsql/data или в /var/lib/pgsql/data. 

Для создания кластера предназначена утилита **initdb**.
В процессе работы она создает конфигурационные файлы, необходимые для работы Postgres. 
Имеет множество ключей, например **-k** - ключ для включения подсчета контрольных сумм.
Данная проверка выполняется при обращении к любой странице данных в кластере и 
позволяет оперативно обнаружить повреждения в данных.

В целях безопасности каталог, в котором инициализируется кластер, 
не может принадлежать суперпользователю ОС (root). 

Владельцем кластера обычно является пользователь **postgres**.

Обычно, для создания кластера используется следующая последвательность команд:

::

	mkdir /home/user/pgsql16/data
	export PGDATA=/home/user/pgsql16/data
	initdb -U postgres -k -D /home/user/pgsql16/data

Создание каталога для кластера, создание системной переменной PGDATA и запуск утилиты initdb от имени 
пользователя postgres (-U postgres).

В ALT LINUX процесс инициализации кластера автоматизирован скриптом **/etc/init.d/postgresq**:

::

	/etc/init.d/postgresql initdb

Среди команд данного скрипта присутствуют:

::

	PGDATA = /var/lib/pgsql/data
	...
	
.. figure:: img/02_initdb.png
       :scale: 100 %
       :align: center
       :alt: asda


Подробнее: https://postgrespro.ru/docs/postgresql/16/app-initdb

.. tabularcolumns:: |p{3cm}|p{10cm}|

.. csv-table:: Расположение файлов в базовом каталоге
	:file: _files/files.csv
	:header-rows: 1
	:class: longtable
	:widths: 30, 70

.. tabularcolumns:: |p{3cm}|p{10cm}|

.. csv-table:: Расположение подкаталогов в базовом каталоге
	:file: _files/subdirs.csv
	:header-rows: 1
	:class: longtable
	:widths: 30, 70

Управление сервером
********************

К основным операциям управления сервером относятся:

- запуск и останов сервера;
- получение текущего статуса сервера;
- обновление конфигурации и некоторые другие.  

Для выполнения этих действий предназначена утилита **pg_ctl**, идущая в составе PostgreSQL. 

**pg_ctl** должна выполняться от имени владельца кластера баз данных (postgres).

Запуск сервера
===============

::

	sudo -u postgres pg_ctl -D /var/lib/pgsql/data start
	
**-D** - ключ указания каталога кластера

.. figure:: img/02_start.png
       :scale: 100 %
       :align: center
       :alt: asda
	   
Для проверки работоспособности сервера можно воспользоваться терминальным клиентом для работы с PostgreSQL **psql**.

Подробнее: https://postgrespro.ru/docs/postgresql/16/app-psql


Подключение к кластеру:
------------------------

::

	psql -U postgres
	
**-U** - ключ указания имени пользователя

.. figure:: img/02_psql_01.png
       :scale: 50 %
       :align: center
       :alt: asda

Ввести запрос:

::

	SELECT now();
	
символ ";" - обязательно.

.. figure:: img/02_select_now.png
       :scale: 100 %
       :align: center
       :alt: asda

Для выхода из psql исползуется сочетание клавиш **CTRL+D**

Останов сервера
---------------

::

	sudo -u postgres pg_ctl -D /var/lib/pgsql/data stop
	

Перезапуск сервера
---------------

::

	sudo -u postgres pg_ctl -D /var/lib/pgsql/data restart
	
Перечитать файлы конфигурации
------------------------------

::

	sudo -u postgres pg_ctl -D /var/lib/pgsql/data reload
	
.. figure:: img/02_reload.png
       :scale: 100 %
       :align: center
       :alt: asda

В данном выводе можно видеть PID процесса сервера

Проверка журнала сообщений
----------------------------

Файл журнала имеет значение по умолчанию *postgresql-%Y-%m-%d_%H%M%S.log*. Значение трактуется как строка формата в функции strftime, 
поэтому в ней можно использовать спецификаторы % для включения в имена файлов информации о дате и времени. 
Максимальное время жизни отдельного журнального файла по умолчанию — 24 часа.

::

	sudo ls -al /var/lib/pgsql/data/log
	
.. figure:: img/02_ls_log.png
       :scale: 100 %
       :align: center
       :alt: asda

Проверить последний файл журнала:

::

	sudo tail -10 /var/lib/pgsql/data/log/

.. figure:: img/02_log_tail.png
       :scale: 100 %
       :align: center
       :alt: asda

Подробнее https://postgrespro.ru/docs/postgresql/16/runtime-config-logging

Самостоятельно:

1. Расчет контрольных сумм
2. Смена формата log-файла и перечитать конфигурацию.

