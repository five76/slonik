Установка Python
~~~~~~~~~~~~~~~~~~~~~

**Алгоритм** — это последовательность каких-либо действий для исполнителя, записанная на формальном языке и приводящая к заданной цели за конечное число шагов.

**Исполнитель** — это человек, животное или техническое устройство, способное выполнять определенный набор команд.

Алгоритм всегда предназначается для конкретного исполнителя. Формальный язык — это язык, который содержит конечное количество синтаксических конструкций и все его конструкции однозначно понимаются исполнителем, для которого он создан.

Формальные исполнители характеризуются: кругом решаемых задач, средой исполнения, системой команд, системой отказов от исполнения, которая включается при невозможности выполнения алгоритма в конкретных условиях.

**Программа** – представление алгоритма на специальном формальном языке, который нужно выполнить с исходными данными и получить как результат выходные данные. Исполнителем программы является компьютер или гаджет.

**Оператор** – это элемент языка, задающий полное описание действия, которое необходимо выполнить в программе.

Каждый оператор представляет собой законченную фразу языка программирования и определяет некоторый вполне законченный этап обработки данных. В состав операторов могут входить ключевые слова, данные, выражения и другие операторы. В английском языке данное понятие обозначается словом **statement**, означающим также предложение.

Для выполнения программы компьютером или гаджетом, необходима программа-посредник, которая называется **транслятором**.

На основе транслятора компьютер (гаджет) преобразует вводимые в него программы на машинный язык нулей и единиц (объектный код), поскольку только он является языком процессора. 
Трансляторы реализуются в виде **компиляторов** или **интерпретаторов**. 

С точки зрения выполнения принципы работы компилятора и интерпретатора существенно различаются.

**Компилятор** (англ. ompiler – составитель, собиратель) читает всю программу целиком, делает ее перевод и создает законченный вариант программы на машинном языке, который затем выполняется. Результат работы компилятора – бинарный исполняемый файл. После компиляции исходный код не требуется.

**Интерпретатор** (англ. Interpreter – истолкователь, устный переводчик) переводит и выполняет программу строка за строкой.

Интерпретатор читает исходный код, представленный на языке программирования, построчно и немедленно выполняет его. Исходный файл переводится на машинный язык постоянно., он и является исполняемым.

Язык Python является интерпретируемым языком. Для запуска программ на языке Python необходима программа интерпретатор (виртуальная машина) Python. Данная программа скрывает от Python-программиста все особенности операционной системы. Поэтому, создав программу на Python в системе Windows, ее можно запустить, например, в GNU/Linux и получить такой же результат.

Скачать и установить интерпретатор Python можно совершенно бесплатно с официального сайта: http://python.org/. Для работы нам понадобится интерпретатор Python версии 3 или выше

WINDOWS
""""""""

.. figure:: img/02_inst_01.png
       :scale: 100 %
       :align: center
       :alt: asda


.. figure:: img/02_inst_02.png
       :scale: 100 %
       :align: center
       :alt: asda




LINUX
""""""

Перед установкой необходимо проверить наличие предустановленной версии Python


::

        python --version



.. figure:: img/02_inst_03.png
       :scale: 100 %
       :align: center
       :alt: asda



Если python3 не установлен или версия ниже 3.9, или требуется более новая версия, то необходимо выполнить установку:


::

        sudo apt-get install pytho3 -y



.. figure:: img/02_inst_04.png
       :scale: 100 %
       :align: center
       :alt: asda


Также необходимо установить пакетный менеджер **pip** для Python

**pip** — система управления пакетами, которая используется для установки и управления программными пакетами, написанными на Python.

Система управления пакетами (также иногда «менеджер пакетов» или «пакетный менеджер») — набор программного обеспечения, позволяющего управлять процессом установки, удаления, настройки и обновления различных компонентов программного обеспечения. 

В Windows он устанвливается автоматически вместе с Python.

В Linux необходимо выполнить команду:


::

        sudo apt-get install python3-pip


или (например, в ALT Linux)


::

       sudo apt-get install python3-module-pip


.. figure:: img/02_inst_05.png
       :scale: 100 %
       :align: center
       :alt: asda 


Jupyter Notebook
"""""""""""""""""

Это приложение для создания записных книжек, созданное под эгидой Project Jupyter. Основан на возможностях формата computational notebook, Jupyter Notebook предлагает новые быстрые и интерактивные способы создания прототипов и объяснения кода, изучения и визуализации данных, а также обмена идеями с другими пользователями. 

Ноутбуки расширяют консольный подход к интерактивным вычислениям в качественно новом направлении, предоставляя веб-приложение, подходящее для управления всем процессом вычислений: разработки, документирования и выполнения кода, а также передачи результатов. Ноутбук Jupyter сочетает в себе два компонента:

**Веб-приложение:** браузерная программа редактирования для интерактивного создания компьютерных записных книжек, которая обеспечивает быструю интерактивную среду для создания прототипов и объяснения кода, изучения и визуализации данных и обмена идеями с другими пользователями.

**Документы компьютерного блокнота:** доступный для совместного использования документ, который сочетает в себе компьютерный код, описания простым языком, данные, богатую визуализацию, такую как 3D-модели, диаграммы, математику, графики и рисунки, а также интерактивные элементы управления.

Установка:

В командной строке ввести:

::

        pip install notebook


Основные возможности веб-приложения
''''''''''''''''''''''''''''''''''''

- Редактирование кода в браузере с автоматической подсветкой синтаксиса, выделением отступов и завершением/интроспекцией табуляции.
- Возможность выполнения кода из браузера с привязкой результатов вычислений к коду, который их сгенерировал.
- Отображение результата вычислений с использованием мультимедийных форматов, таких как HTML, LaTeX, PNG, SVG и т.д. Например, рисунки публикационного качества, отображаемые библиотекой [matplotlib], могут быть встроены в текст.
- Редактирование форматированного текста в браузере с использованием языка разметки [Markdown], который может предоставлять комментарии к коду, не ограничивается простым текстом.

Записные книжки 
''''''''''''''''

Записные книжки содержат входные и выходные данные интерактивного сеанса, а также дополнительный текст, который сопровождает код, но не предназначен для выполнения. 
Таким образом, файлы записной книжки могут служить полной вычислительной записью сеанса, чередуя исполняемый код с пояснительным текстом, математическими расчетами и подробными представлениями результирующих объектов.
Эти документы являются файлами в формате JSON и сохраняются с расширением **.ipynb**. Поскольку JSON - это обычный текстовый формат, им можно управлять по версиям и делиться с коллегами.

Записные книжки можно экспортировать в различные статические форматы, включая HTML (например, для записей в блоге), reStructuredText, LaTeX, PDF и слайд-шоу, с помощью команды [nbconvert].

При сиандартной установке Jupiter будет запущен на локальном компьютере. Если URL-адрес в адресной строке начинается с http://localhost: или http://127.0.0.1::, то в качестве сервера выступает ваш компьютер. Jupyter не отправляет ваши данные куда—либо еще.

Чаще всего с юпитер-ноутбуками работают программисты на Python. Так сложилось исторически: проект вырос из IPython, особого расширения для «Питона», хотя сейчас у платформы есть поддержка и для других языков.

Основные сферы использования среды — big data и data science, машинное обучение, математическая статистика и аналитика. В этих направлениях пригодилась способность Jupyter Notebook выводить данные туда же, где написан код. Получается как бы страница блокнота: в одном месте собраны участки кода, результаты их выполнения, таблицы, участки и графики.

Для чего нужен Jupyter Notebook
"""""""""""""""""""""""""""""""""

- Писать код в специальной среде с подсветкой синтаксиса, исправлением ошибок и другими возможностями IDE.
- Запускать разные участки кода в произвольной последовательности или написанную программу целиком.
- Загружать какие-то данные, обрабатывать и преобразовывать их, не затрагивая при этом другие участки программы.
- Вставлять и выводить результаты, включая визуализацию, прямо посреди кода.
- Делиться кодом с другими разработчиками и давать им общий доступ к проекту.
- Организовывать командную работу, когда у каждого программиста — своя задача, связанная с другими.
- Писать сопровождающий текст и оформлять «документ» так, чтобы он выглядел красиво и понятно.

Jupyter более гибкий, чем стандартная IDE, а все написанное выглядит как документ и собрано в одном месте.ы

Преимущества Jupyter Notebook
""""""""""""""""""""""""""""""""

**Наглядность**

Все находится в одном месте: код, сопровождающий текст, результаты и визуализация. Поэтому нужная информация всегда под рукой, а оформить ее можно в понятном формате. При этом Юпитер — полноценная среда, в которой можно запускать код и проверять его.

**Документоориентированность**

Это преимущество связано с наглядностью. Юпитер-ноутбук выглядит как документ: глава из книги, отчет или что-то еще. Благодаря такому отображению с его помощью можно создавать отличные интерактивные документы по работе или для обучения. Например, отчет, который при запуске кода сам рисует график, или учебник, демонстрирующий работу программы прямо на страницах.

**Широкие возможности**

Jupyter Notebook мощный и гибкий. В нем все шире поддержка разных языков, в том числе специфических, есть нужные разработчику библиотеки. Облачная версия предоставляет мощности для отрисовки графиков — их тоже можно визуализировать с помощью разных инструментов. Markdown позволяет делать документы красивее и форматировать их. Есть и другие расширения: для создания презентаций, экспортирования документов в HTML и прочих функций.

**Моментальный вывод результата**

Результат выполненной программы в стандартной IDE открывается в отдельном окне или записывается в файл. В любом случае его довольно редко бывает можно просмотреть внутри среды, если это не текст и не число, а, скажем, график или таблица. А в Jupyter Notebook все отображается сразу под кодом, в том же документе. Удобно и, главное, видно сразу.

**Командная работа**

Возможности для командной работы позволяют делиться документом с другими, запускать собственный сервер для группы разработчиков, совместно редактировать и исправлять ошибки. Все это в одной и той же версии документа, а не в разных его экземплярах (как было бы, например, с передачей друг другу файлов с кодом).

Недостатки Jupyter Notebook
""""""""""""""""""""""""""""""

**Неуниверсальность**

Если нужно только писать код, а тексты и графики ни к чему, Юпитер-ноутбук может оказаться попросту избыточным решением. 

Не подходит для крупных проектов, где все связано между собой. Он рассчитан на написание и выполнение отдельных маленьких «кусочков» программы, а не ее целиком. 

Сложный перенос. Переносить код из Jupyter Notebook в другие среды — процесс утомительный из-за структуры, основанной на маленьких блоках.

Может использоваться как основной инструмент для аналитиков данных, специалистов в Data Science.


